name: deploys
concurrency: production
on:
  push:
    branches:
      - main
jobs:
  deployment:
    runs-on: ubuntu-latest
    concurrency: deploy-group
    environment: production
    strategy:
      fail-fast: true
      matrix:
        service: [feeders, aggregator, consumer]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-dept: 0
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: |
            experimental-features = nix-command flakes
            accept-flake-config = true
            keep-env-derivations = true
            keep-outputs = true
      - name: Restore and save Nix store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: build-${{ runner.os }}-${{ hashFiles('Cargo.toml', 'flake.nix', 'flake.lock', 'Cargo.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          gc-max-store-size-linux: 1G
          purge: true
          purge-prefixes: cache-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
      - name: Build and Push ${{ matrix.service }}
        env:
          REGISTRY_URL: ghcr.io
          REGISTRY_USER: ${{ github.actor }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_NAME: ${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ matrix.service }}
          IMAGE_TAG: ${{ github.sha }}
          PUSH_LATEST_TAG: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "Attempting to push image for ${{ matrix.service }} with commit ${{ github.sha }}..."
          nix -L run .#${{ matrix.service }}
